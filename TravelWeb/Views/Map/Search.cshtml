
@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */

    #map {
        height: 450px;
        weight: 50%;
    }

    /* Optional: Makes the sample page fill the window. */

    /*html,
    body {
        height: 80%;
        weight: 50%;
        margin-left: 15%;
        margin-right: 15%;
        padding: 0;
    }*/

    .controls {
        background-color: #fff;
        border-radius: 2px;
        border: 1px solid transparent;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        box-sizing: border-box;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        height: 29px;
        margin-left: 17px;
        margin-top: 10px;
        outline: none;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 200px;
    }

        .controls:focus {
            border-color: #4d90fe;
        }

    .title {
        font-weight: bold;
    }

    #infowindow-content {
        display: none;
    }

    #map #infowindow-content {
        display: inline;
    }
    #pre-header {
        display: none;
    }

    #post_header {
        display: none;
    }
</style>
<div class="container background-white" style="height:900px;">
    <div class="col-md-offset-5">
        <br/> <br/>
        <h3>Tìm kiếm vị trí</h3>
    </div>
    <br/>
    <input id="pac-input" class="controls" type="text" placeholder="Bạn ở đâu?" style="width:300px;"><br/>
    <br/>
    <div id="map"></div>
    <div id="infowindow-content">
        <span id="place-name" class="title"></span>
        <br> Place ID
        <span id="place-id"></span>
        <br>
        <span id="place-address"></span>
    </div>
    <ul id="list">

    </ul>
</div>
    <script>
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 10.8051786, lng: 106.7074893 },
                zoom: 15
            });
            var input = document.getElementById('pac-input');
            var autocomplete = new google.maps.places.Autocomplete(
                input, { placeIdOnly: true });
            autocomplete.bindTo('bounds', map);

            map.controls[google.maps.ControlPosition.TOP_LEFT].push();

            var infowindow = new google.maps.InfoWindow();
            var infowindowContent = document.getElementById('infowindow-content');
            infowindow.setContent(infowindowContent);
            var geocoder = new google.maps.Geocoder;
            var marker = new google.maps.Marker({
                map: map
            });
            marker.addListener('click', function () {
                infowindow.open(map, marker);
            });

            autocomplete.addListener('place_changed', function () {
                infowindow.close();
                var place = autocomplete.getPlace();

                if (!place.place_id) {
                    return;
                }

                geocoder.geocode({ 'placeId': place.place_id }, function (results, status) {

                    if (status == 'OK') {
                        if (results[0]) {
                            var add = results[0].formatted_address;
                            var value = add.split(",");
                            count = value.length;
                            country = value[count - 1];
                            state = value[count - 2];
                            city = value[count - 3];
                            var request = {
                                location: results[0].geometry.location,
                                radius: '5000',
                                types: ['hotel']
                                //--https://developers.google.com/places/supported_types?hl=vi--
                            };

                            var service = new google.maps.places.PlacesService(map);
                            var param = getElementById("list-layout")
                            service.nearbySearch(request, callback);
                            function callback(results, status) {
                                if (status === google.maps.places.PlacesServiceStatus.OK) {
                                    for (var i = 0; i < results.length; i++) {
                                        param.setContent(result[i].formatted_address + "/n")
           
                                    }
                                }
                            }
                            

                            function createMarker(place) {
                                var placeLoc = place.geometry.location;
                                var marker = new google.maps.Marker({
                                    map: map,
                                    position: place.geometry.location
                                });

                                google.maps.event.addListener(marker, 'click', function () {
                                    infowindow.setContent(place.name);
                                    infowindow.open(map, this);
                                });
                            }
                            alert("city name is: " + state);
                        }
                        else { alert("address not found"); }
                    }
                    else {
                        alert("Geocoder failed due to: " + status);

                    }
                    if (status !== 'OK') {
                        window.alert('Geocoder failed due to: ' + status);
                        return;
                    }
                    map.setZoom(11);
                    map.setCenter(results[0].geometry.location);
                    // Set the position of the marker using the place ID and location.
                    marker.setPlace({

                        location: results[0].geometry.location
                    });
                    marker.setVisible(true);
                    infowindowContent.children['place-name'].textContent = place.name;

                    infowindowContent.children['place-address'].textContent =
                        results[0].formatted_address;
                    infowindow.open(map, marker);
                        
                });
            });
        }
    </script>
<p id="list-layout">
   
</p>
    <hr>
<!--Google map Place API-->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyASmQugLkCndcVe7Vg7D0_ziNN08piUNyM&libraries=places&callback=initMap" async defer> </script>
    

